// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication4.Data;

#nullable disable

namespace WebApplication4.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservationSallboat", b =>
                {
                    b.Property<int>("ReservationsIdReservation")
                        .HasColumnType("int");

                    b.Property<int>("SallboatsIdSallboat")
                        .HasColumnType("int");

                    b.HasKey("ReservationsIdReservation", "SallboatsIdSallboat");

                    b.HasIndex("SallboatsIdSallboat");

                    b.ToTable("ReservationSallboat");
                    
                });

            modelBuilder.Entity("WebApplication4.Models.BoatStandard", b =>
                {
                    b.Property<int>("IdBoatStandard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBoatStandard"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBoatStandard");

                    b.ToTable("BoatStandards");

                    b.HasData(
                        new
                        {
                            IdBoatStandard = 1,
                            Level = 1,
                            Name = "brak"
                        });
                });

            modelBuilder.Entity("WebApplication4.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdClientCategory")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.HasIndex("IdClientCategory");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Birthday = new DateTime(2024, 6, 14, 18, 40, 56, 897, DateTimeKind.Local).AddTicks(4819),
                            Email = "asdasd",
                            IdClientCategory = 1,
                            LastName = "lalsd",
                            Name = "name",
                            Pesel = "asdASD233"
                        });
                });

            modelBuilder.Entity("WebApplication4.Models.ClientCategory", b =>
                {
                    b.Property<int>("IdClientCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientCategory"));

                    b.Property<int>("DiscountPerc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClientCategory");

                    b.ToTable("ClientCategory");

                    b.HasData(
                        new
                        {
                            IdClientCategory = 1,
                            DiscountPerc = 123123,
                            Name = "asdasd"
                        });
                });

            modelBuilder.Entity("WebApplication4.Models.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<string>("CancelReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fulfilled")
                        .HasColumnType("bit");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBoats")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdBoatStandard");

                    b.HasIndex("IdClient");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            CancelReason = "basd",
                            Capacity = 1,
                            DateFrom = new DateTime(2024, 6, 14, 18, 40, 56, 902, DateTimeKind.Local).AddTicks(2166),
                            DateTo = new DateTime(2024, 6, 14, 18, 40, 56, 902, DateTimeKind.Local).AddTicks(2591),
                            Fulfilled = true,
                            IdBoatStandard = 1,
                            IdClient = 1,
                            NumOfBoats = 1,
                            Price = 1123
                        });
                });

            modelBuilder.Entity("WebApplication4.Models.Sallboat", b =>
                {
                    b.Property<int>("IdSallboat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSallboat"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdSallboat");

                    b.HasIndex("IdBoatStandard");

                    b.ToTable("Sallboat");

                    b.HasData(
                        new
                        {
                            IdSallboat = 1,
                            Capacity = 1,
                            Description = "asd",
                            IdBoatStandard = 1,
                            Name = "brak",
                            Price = 1
                        });
                });

            modelBuilder.Entity("ReservationSallboat", b =>
            {
                b.HasOne("WebApplication4.Models.Reservation", null)
                    .WithMany()
                    .HasForeignKey("ReservationsIdReservation")
                    .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("WebApplication4.Models.Sallboat", null)
                        .WithMany()
                        .HasForeignKey("SallboatsIdSallboat")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("WebApplication4.Models.Client", b =>
                {
                    b.HasOne("WebApplication4.Models.ClientCategory", "ClientCategory")
                        .WithMany()
                        .HasForeignKey("IdClientCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCategory");
                });

            modelBuilder.Entity("WebApplication4.Models.Reservation", b =>
                {
                    b.HasOne("WebApplication4.Models.BoatStandard", "BoatStandard")
                        .WithMany()
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandard");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WebApplication4.Models.Sallboat", b =>
                {
                    b.HasOne("WebApplication4.Models.BoatStandard", "BoatStandard")
                        .WithMany("Sallboats")
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandard");
                });

            modelBuilder.Entity("WebApplication4.Models.BoatStandard", b =>
                {
                    b.Navigation("Sallboats");
                });

            modelBuilder.Entity("WebApplication4.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
